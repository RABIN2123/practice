/**
*@file  Anograma.cpp
*@author Литвинов.О.А., гр. 515К
*@date 13 июня 2020
*@brief Практическая работа
*
*/
#include "Header.h"
void anograma(char str[]) {
	srand(time(0));
	int n = strlen(str), k = 1, i1 = 0;
	char* p = (char*)malloc(k);
	*p = 0;
	char* p1;
	int j = 0, n1, r = 0;
	for (; j != n;) {
		//Цикл копирует символы в другой массив до тех пор пока невстетит
		//Знак препинания, пробел, или переход на новую строку
		for (j; str[j] != '\n' && !strchr(symbol, str[j]); j++, i1++) {
			p = (char*)realloc(p, k++);
			p[i1] = str[j];
		}
		p[i1] = '\0';
		n1 = strlen(p);//Количество символов в слове
		p1 = (char*)malloc(n1);
		//Обнуление массива
		for (int i = 0; i < n1; i++) {
			p1[i] = 0;
		}
		//Перемешивание порядка символов в массиве
		for (int i = 0; i < n1;) {
			r = rand() % n1;
			//Если случайное место в новом массиве занято, не знанято в него вставляется символ
			if (!p1[r]) {
				p1[r] = p[i];
				i++;
			}
		}
		//Подстановка перемешаных символов на место старое место
		for (int i = 0, r = j - n1; r < j; r++, i++) {
			str[r] = p1[i];
		}
		//Освобождение памяти
		free(p1);
		//Обнуление массива
		for (int i = 0; i < n1; i++) {
			p[i] = 0;
		}
		k = 1;
		p = (char*)realloc(p, k);
		j++, i1 = 0;
	}
	//Освобождение памяти
	free(p);
	printf("Строка с перемешаными буквами\nв пределах слова:");
	puts(str);
}
